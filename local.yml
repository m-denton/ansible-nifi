---
- hosts: localhost
  become: yes
  gather_facts: true
  pre_tasks:
    - name: "Prepare for NiFi install"
      include: roles/augment-nifi.yml
    - name: "Install the Nifi Toolkit"
      include: roles/install-toolkit.yml
  roles:
    - role: geerlingguy.java
      when: "ansible_os_family == 'RedHat'"
      java_packages:
        - java-1.8.0-openjdk-devel
    - role: cavemandaveman.nifi
  post_tasks:
    - name: Update JAVA_HOME in /apps/nifi/current/bin/nifi-env.sh
      lineinfile:
        path: "{{ nifi_config_dirs.home }}/bin/nifi-env.sh"
        regexp: '^#\s*export JAVA_HOME.*$'
        line: 'export JAVA_HOME={{ java_home }}'
    - name: Restart Nifi
      service: 
        name: nifi
        state: restarted
      
  vars:
    java_home: /usr/lib/jvm/java-1.8.0-openjdk/jre
    nifi_version: 1.12.1
    download_mirror_uri: http://apache.cs.utah.edu
    nifi_user: svc-infogov
    nifi_group: svc-infogovgrp
    nifi_config_dirs:
      install: /apps/infogov/nifi/releases
      home: /apps/infogov/nifi/releases/current
      external_config: /apps/infogov/nifi/config_resources
      toolkit: /apps/infogov/nifi/toolkit
    # nifi_properties:
    #   nifi.web.http.host: ""
    #   nifi.web.http.port: ""
    #   nifi.web.https.host: "{{ ansible_fqdn }}"
    #   nifi.web.https.port: 8443
    #   nifi.security.keystore: "{{ nifi_config_dirs.external_config }}/ssl/{{ ansible_fqdn }}.jks"
    #   nifi.security.keystoreType: JKS
    #   nifi.security.keystorePasswd: "{{ ansible_hostname }}!"
    #   nifi.security.keyPasswd: "{{ ansible_hostname }}!"
    #   nifi.security.truststore: "{{ nifi_config_dirs.external_config }}/ssl/truststore.jks"
    #   nifi.security.truststoreType: JKS
    #   nifi.security.truststorePasswd: changeit
    #   nifi.remote.input.host: "{{ ansible_fqdn }}"
    #   nifi.remote.input.secure: true
    #   nifi.remote.input.socket.port: 10443
    #   nifi.remote.input.http.enabled: true
    #   nifi.cluster.protocol.heartbeat.interval: 5 sec
    #   nifi.cluster.protocol.is.secure: true
    #   nifi.cluster.is.node: true
    #   nifi.cluster.node.address: "{{ ansible_fqdn }}"
    #   nifi.cluster.node.protocol.port: 11443
    #   nifi.cluster.flow.election.max.candidates: 3
    #   nifi.cluster.load.balance.host: "{{ ansible_fqdn }}"
    #   nifi.cluster.load.balance.port: 6342
    #   nifi.state.management.embedded.zookeeper.start: true
    #   nifi.zookeeper.connect.string: "{{ groups['nifi_servers'][0] }}:2181,{{ groups['nifi_servers'][1] }}:2181,{{ groups['nifi_servers'][2] }}:2181"
    #   nifi.kerberos.krb5.file: "{{ nifi_config_dirs.external_config }}/hdp_conf/krb5.conf"
    bootstrap:
      java.arg.17: "-Dorg.xerial.snappy.tempdir={{ nifi_config_dirs.external_config }}"
    # logback:
    #   /configuration/appender[@name="APP_FILE"]/rollingPolicy/maxFileSize: 10MB
    #   /configuration/appender[@name="APP_FILE"]/rollingPolicy/maxHistory: 5
    #   /configuration/logger[@name="org.apache.nifi.cluster.coordination.heartbeat" and @level="WARN"]: ""
    #   /configuration/logger[@name="org.apache.nifi.cluster.protocol.impl" and @level="WARN"]: ""
    #   /configuration/logger[@name="org.apache.nifi.controller.cluster" and @level="WARN"]: ""
    #   /configuration/logger[@name="org.apache.nifi.controller.repository.WriteAheadFlowFileRepository" and @level="WARN"]: ""
    #   /configuration/logger[@name="org.wali.MinimalLockingWriteAheadLog" and @level="WARN"]: ""
    # login_identity_providers:
    #   /loginIdentityProviders/provider/identifier: ldap-provider
    #   /loginIdentityProviders/provider/property[@name="Authentication Strategy"]: LDAPS
    #   /loginIdentityProviders/provider/property[@name="Manager DN"]: CN=svc-apache-nifi,OU=Service,OU=Secured Accounts,OU=SPECTRUM,DC=CORP,DC=CHARTERCOM,DC=com
    #   /loginIdentityProviders/provider/property[@name="Manager Password"]: b?]1kv3BB~<7.aLh}80't*\Z
    #   /loginIdentityProviders/provider/property[@name="TLS - Truststore"]: "{{ nifi_config_dirs.external_config }}/ssl/ldap.jks"
    #   /loginIdentityProviders/provider/property[@name="TLS - Truststore Password"]: changeit
    #   /loginIdentityProviders/provider/property[@name="TLS - Truststore Type"]: JKS
    #   /loginIdentityProviders/provider/property[@name="TLS - Protocol"]: TLSv1.2
    #   /loginIdentityProviders/provider/property[@name="Url"]: ldaps://ncechtradlb.corp.chartercom.com:636
    #   /loginIdentityProviders/provider/property[@name="User Search Base"]: OU=Corp Ops Engin _ Tech,OU=Corporate,OU=Accounts,OU=SPECTRUM,DC=CORP,DC=CHARTERCOM,DC=com
    #   /loginIdentityProviders/provider/property[@name="User Search Filter"]: sAMAccountName={0}
    #   /loginIdentityProviders/provider/property[@name="Identity Strategy"]: USE_USERNAME
    # state_management:
    #   /stateManagement/cluster-provider/property[@name="Connect String"]: "{{ nifi_properties['nifi.zookeeper.connect.string'] }}"